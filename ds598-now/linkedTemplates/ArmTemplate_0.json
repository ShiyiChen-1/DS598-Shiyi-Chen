{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ds598-now"
		},
		"AirPollution_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://api.openweathermap.org/"
		},
		"AzureBlobStorage1_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://ds598.blob.core.windows.net/"
		},
		"Historical Weather Data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://history.openweathermap.org"
		},
		"LS_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ds598.dfs.core.windows.net/"
		},
		"LS_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://shiyichen-1.vault.azure.net/"
		},
		"LS_OpenWeather_AirPollution_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://api.openweathermap.org/"
		},
		"LS_OpenWeather_Historical_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://history.openweathermap.org/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AirPollution')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('AirPollution_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage1_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historical Weather Data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Historical Weather Data_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_OpenWeather_AirPollution')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_OpenWeather_AirPollution_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_OpenWeather_Historical')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_OpenWeather_Historical_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirPollution')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AirPollution",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"start": {
						"type": "string"
					},
					"end": {
						"type": "string"
					},
					"lat": {
						"type": "string"
					},
					"lon": {
						"type": "string"
					},
					"appid": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "/data/2.5/air_pollution/history?lat=@{dataset().lat}&lon=@{dataset().lon}&start=@{dataset().start}&end=@{dataset().end}&appid=@{dataset().appid}\n",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AirPollution')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"start": {
						"type": "string"
					},
					"lat": {
						"type": "string"
					},
					"lon": {
						"type": "string"
					},
					"end": {
						"type": "string"
					},
					"appid": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze",
						"fileSystem": "shiyichen-ds598"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze",
						"fileSystem": "shiyichen-ds598"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/historicalweather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Historical Weather Data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"start": {
						"type": "string"
					},
					"lat": {
						"type": "string"
					},
					"lon": {
						"type": "string"
					},
					"end": {
						"type": "string"
					},
					"appid": {
						"type": "string"
					},
					"dt": {
						"type": "string"
					},
					"dataType": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "/data/2.5/history/city?lat=@{dataset().lat}&lon=@{dataset().lon}&type=@{dataset().dataType}&start=@{dataset().start}&end=@{dataset().end}&appid=@{dataset().appid}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Historical Weather Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weather data pipline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "weather data",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://shiyichen-1.vault.azure.net/secrets/OpenWeatherAPIKey?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "weather data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, div(sub(ticks(utcNow()), ticks('2023-01-01')), 864000000000))\n\n\n\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "historicalweather",
											"type": "DatasetReference",
											"parameters": {
												"start": {
													"value": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(item(), 52)))), ticks('1970-01-01')), 10000000)}",
													"type": "Expression"
												},
												"lat": "@pipeline().parameters.lat",
												"lon": "@pipeline().parameters.lon",
												"end": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(add(item(), 1), 52)))), ticks('1970-01-01')), 10000000)}",
												"appid": {
													"value": "@{activity('weather data').output.value}",
													"type": "Expression"
												},
												"dt": "@string(sub(div(ticks(utcNow()), 10000000), mul(86400, item())))",
												"dataType": "@pipeline().parameters.dataType"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Json3",
											"type": "DatasetReference",
											"parameters": {
												"start": {
													"value": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(item(), 52)))), ticks('1970-01-01')), 10000000)}",
													"type": "Expression"
												},
												"lat": {
													"value": "@pipeline().parameters.lat",
													"type": "Expression"
												},
												"lon": {
													"value": "@pipeline().parameters.lon",
													"type": "Expression"
												},
												"end": {
													"value": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(add(item(), 1), 52)))), ticks('1970-01-01')), 10000000)}",
													"type": "Expression"
												},
												"appid": {
													"value": "appid: @{activity('weather data').output.value}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set_API_Key",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "weather data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "APIKey",
							"value": {
								"value": "@activity('weather data').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"lat": {
						"type": "string",
						"defaultValue": "42.3601"
					},
					"lon": {
						"type": "string",
						"defaultValue": "-71.0589"
					},
					"dataType": {
						"type": "string",
						"defaultValue": "hour"
					}
				},
				"variables": {
					"APIKey": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/historicalweather')]",
				"[concat(variables('factoryId'), '/datasets/Json3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weather pollution data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pollution data",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://shiyichen-1.vault.azure.net/secrets/OpenWeatherAPIKey?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "pollution data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1, 52) ",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AirPollution",
											"type": "DatasetReference",
											"parameters": {
												"start": {
													"value": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(item(), 52)))), ticks('1970-01-01')), 10000000)}",
													"type": "Expression"
												},
												"end": {
													"value": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(add(item(), 1), 52)))), ticks('1970-01-01')), 10000000)}",
													"type": "Expression"
												},
												"lat": {
													"value": "@pipeline().parameters.lat",
													"type": "Expression"
												},
												"lon": {
													"value": "@pipeline().parameters.lon",
													"type": "Expression"
												},
												"appid": {
													"value": "@{activity('pollution data').output.value}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Json4",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"lat": {
						"type": "string",
						"defaultValue": "42.3601"
					},
					"lon": {
						"type": "string",
						"defaultValue": "-71.0589"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AirPollution')]",
				"[concat(variables('factoryId'), '/datasets/Json4')]"
			]
		}
	]
}