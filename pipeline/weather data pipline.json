{
	"name": "weather data pipline",
	"properties": {
		"activities": [
			{
				"name": "weather data",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": "https://shiyichen-1.vault.azure.net/secrets/OpenWeatherAPIKey?api-version=7.0",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "weather data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(0, div(sub(ticks(utcNow()), ticks('2023-01-01')), 864000000000))\n\n\n\n",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "historicalweather",
									"type": "DatasetReference",
									"parameters": {
										"start": {
											"value": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(item(), 52)))), ticks('1970-01-01')), 10000000)}",
											"type": "Expression"
										},
										"lat": "@pipeline().parameters.lat",
										"lon": "@pipeline().parameters.lon",
										"end": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(add(item(), 1), 52)))), ticks('1970-01-01')), 10000000)}",
										"appid": {
											"value": "@{activity('weather data').output.value}",
											"type": "Expression"
										},
										"dt": "@string(sub(div(ticks(utcNow()), 10000000), mul(86400, item())))",
										"dataType": "@pipeline().parameters.dataType"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Json3",
									"type": "DatasetReference",
									"parameters": {
										"start": {
											"value": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(item(), 52)))), ticks('1970-01-01')), 10000000)}",
											"type": "Expression"
										},
										"lat": {
											"value": "@pipeline().parameters.lat",
											"type": "Expression"
										},
										"lon": {
											"value": "@pipeline().parameters.lon",
											"type": "Expression"
										},
										"end": {
											"value": "@{div(sub(ticks(addDays(utcNow(), mul(7, sub(add(item(), 1), 52)))), ticks('1970-01-01')), 10000000)}",
											"type": "Expression"
										},
										"appid": {
											"value": "appid: @{activity('weather data').output.value}",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Set_API_Key",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "weather data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "APIKey",
					"value": {
						"value": "@activity('weather data').output.value",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"lat": {
				"type": "string",
				"defaultValue": "42.3601"
			},
			"lon": {
				"type": "string",
				"defaultValue": "-71.0589"
			},
			"dataType": {
				"type": "string",
				"defaultValue": "hour"
			}
		},
		"variables": {
			"APIKey": {
				"type": "String"
			}
		},
		"annotations": []
	}
}